#!/usr/bin/env ruby
# mercurial

# 20250419
# 0.2.0

# Changes:
# -/0: + setup sub-command
# 1. + setup()
# 2. + wireguard_tools_installed?()
# 3. + homebrew_installed?()
# 4. + check_for_wg_program()
# 5. + enter_admin_password
# 6. + require 'FileUtils/which'
# 7. + require 'Kernel/run'
# 8. ~ main()

require 'fileutils'

require 'FileUtils/which'
require 'Kernel/run'

def setup
  unless homebrew_installed?
    run('/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"', show: true)
  end
  unless wireguard_tools_installed?
    run('brew install wireguard-tools', show: true)
  end
end

def homebrew_installed?
  FileUtils.which('brew')
end

def wireguard_tools_installed?
  FileUtils.which('wg-quick')
end

def check_for_wg_program
  unless wireguard_tools_installed?
    puts "wg-quick was not found.  You must install wireguard-tools (installs wg-quick) first."
    puts "The easist way to install it is by running `mercurial setup`."
    exit
  end
end

def enter_admin_password
  system('sudo -v')
end

def wireguard_config_location
  File.join(%w{~ .config wireguard})
end

def wireguard_configs_path
  File.expand_path(wireguard_config_location)
end

def wireguard_config_filenames
  Dir.glob("#{wireguard_configs_path}/*.conf")
end

def random_wireguard_config_filename
  wireguard_config_filenames.sample
end

def load_wireguard_config(wireguard_config_filename)
  system("wg-quick up #{wireguard_config_filename}")
end

def unload_wireguard_config(wireguard_config_filename)
  system("wg-quick down #{wireguard_config_filename}")
end

def up
  wireguard_config_filename = random_wireguard_config_filename
  load_wireguard_config(wireguard_config_filename)
  tmpfile = File.open("/tmp/mercurial-#{Time.now}.tmp", 'w+')
  tmpfile.puts(wireguard_config_filename)
  tmpfile.close
end

def current_wireguard_config_filename
  @current_wireguard_config_filename ||= (
    if tmpfilename = Dir.glob('/tmp/mercurial-*.tmp').last
      File.read(tmpfilename)
    end
  )
end

def down
  if current_wireguard_config_filename
    unload_wireguard_config(current_wireguard_config_filename)
  else
    wireguard_config_filenames.each do |wireguard_config_filename|
      unload_wireguard_config(wireguard_config_filename)
      break if $?.exitstatus == 0
    end
  end
  Dir.glob('/tmp/mercurial-*.tmp').each{|filename| FileUtils.rm(filename)}
end

def up?
  system('wg show')
  $?.exitstatus == 1
end

def main
  if ARGV[0] == 'setup'
    setup
  else
    check_for_wg_program
    enter_admin_password
    down if up?
    up
  end
end

main
